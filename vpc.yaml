AWSTemplateFormatVersion: '2010-09-09'
Description: >
  VPC with Subnets, Route Tables, Internet Gateway, and Security Groups

Parameters:
  PJCode:
    Type: String
    Default: MakeNetwork
    Description: Project code prefix for resource naming

Resources:

  # VPC
  MyVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-vpc"

  # Subnets
  PublicSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-public-1a"

  PublicSubnet1C:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: ap-northeast-1c
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-public-1c"

  PrivateSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: ap-northeast-1a
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-private-1a"

  PrivateSubnet1C:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: ap-northeast-1c
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-private-1c"

  # Internet Gateway
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-igw"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVpc
      InternetGatewayId: !Ref MyInternetGateway

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-public-rt"

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: !Sub "${PJCode}-private-rt"

  PublicDefaultRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  # Route Table Associations
  PublicSubnet1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1CRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1C
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1A
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet1CRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1C
      RouteTableId: !Ref PrivateRouteTable

  # Security Groups
  InstanceSecurityGroupEc2:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and ssh
      GroupName: ec2
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref PJCode, ec2 ] ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  InstanceSecurityGroupELB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and https
      GroupName: ELB
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref PJCode, ELB ] ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow RDS
      GroupName: RDS
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: !Join [ "-", [ !Ref PJCode, RDS ] ]
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref InstanceSecurityGroupEc2

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref MyVpc
    Export:
      Name: !Sub "${PJCode}-VpcId"

  PublicSubnet1AId:
    Value: !Ref PublicSubnet1A
    Export:
      Name: !Sub "${PJCode}-PublicSubnet1A"

  PublicSubnet1CId:
    Value: !Ref PublicSubnet1C
    Export:
      Name: !Sub "${PJCode}-PublicSubnet1C"

  PrivateSubnet1AId:
    Value: !Ref PrivateSubnet1A
    Export:
      Name: !Sub "${PJCode}-PrivateSubnet1A"

  PrivateSubnet1CId:
    Value: !Ref PrivateSubnet1C
    Export:
      Name: !Sub "${PJCode}-PrivateSubnet1C"

  PublicRouteTableId:
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub "${PJCode}-PublicRouteTable"

  PrivateRouteTableId:
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub "${PJCode}-PrivateRouteTable"

  InternetGatewayId:
    Value: !Ref MyInternetGateway
    Export:
      Name: !Sub "${PJCode}-InternetGateway"
